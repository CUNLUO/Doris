" All system-wide defaults are set in $VIMRUNTIME/debian.vim (usually just
" /usr/share/vim/vimcurrent/debian.vim) and sourced by the call to :runtime
" you can find below.  If you wish to change any of those settings, you should
" do it in this file (/etc/vim/vimrc), since debian.vim will be overwritten
" everytime an upgrade of the vim packages is performed.  It is recommended to
" make changes after sourcing debian.vim since it alters the value of the
" 'compatible' option.
scriptencoding latin1

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
"set compatible

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
syntax on

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
"set background=dark

" Uncomment the following to have Vim jump to the last position when
" reopening a file
"if has("autocmd")
"  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
"    \| exe "normal g'\"" | endif
"endif

" Uncomment the following to have Vim load indentation rules according to the
" detected filetype. Per default Debian Vim only load filetype specific
" plugins.
"if has("autocmd")
"  filetype indent on
"endif

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
set showcmd		" Show (partial) command in status line.
set showmatch		" Show matching brackets.
set ignorecase		" Do case insensitive matching
"set smartcase		" Do smart case matching
"set incsearch		" Incremental search
"set autowrite		" Automatically save before commands like :next and :make
"set hidden             " Hide buffers when they are abandoned
"set mouse=a		" Enable mouse usage (all modes) in terminals

"scriptencoding utf-8
set bg=dark
set tabstop=8
set shiftwidth=8
set softtabstop=0       " was 8
set expandtab 
set diffopt+=iwhite " don't diff white-space 
set modelines=1

"copy paste from xclipboard
vmap <F6> :!xclip -f -sel clip<CR>
map  <F7> mz:-1r !xclip -o -sel clip<CR>
 
if (&termencoding == "utf-8") || has("gui_running")
    if v:version >= 700
        set list listchars=eol:\ ,tab:»·,trail:·,precedes:.,extends:.,nbsp:.
    else
        set list listchars=eol:\ ,tab:»·,trail:·,extends:.
    endif
else
    if v:version >= 700
        "set list listchars=eol:\ ,tab:>-,trail:.,extends:>,nbsp:_
        set list listchars=eol:%,tab:>-,trail:.,extends:>,nbsp:_
    else
        set list listchars=eol:%,tab:>-,trail:.,extends:>
    endif
    "set Tlist_Inc_Winwidth=0
endif

"exe "set list listchars=tab:\xbb\xb7,trail:\xb7"
"set list listchars=tab:\|_,eol:Â¶ 
set nolist

"autocmd FileType * set tabstop=2|set shiftwidth=2|set noexpandtab
"autocmd FileType python set tabstop=4|set shiftwidth=4|set expandtab
au FileType make setlocal noexpandtab  " for make files
au BufEnter *.m set ai sw=2 ts=2 sts=2 sta et fo=croql
au BufEnter *.py set ai sw=2 ts=2 sts=2 sta et fo=croql
au BufEnter *.cc set ai sw=2 ts=2 sts=2 sta et fo=croql
au BufEnter *.res set ai ts=8 sw=8

" Source a global configuration file if available
" XXX Deprecated, please move your changes here in /etc/vim/vimrc
if filereadable("/etc/vim/vimrc.local")
  " source /etc/vim/vimrc.local
"  source /etc/vimrc
endif

